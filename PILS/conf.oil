CPU mySystem {
	
	OS myOs {
		EE_OPT = "DEBUG";
       
	    STARTUPHOOK = TRUE;

		USERESSCHEDULER = FALSE;
		
		CPU_DATA = AVR8{
			MULTI_STACK = FALSE;
		};
		
		MCU_DATA = MEGA{
			MODEL = MEGA_328p;
		};
        
		LIB = ARDUINO{
			SDK_BOARD = UNO;
			
			VARIANT = CC{
				VERSION = "1.8.16";
			};
			
			STAND_ALONE = TRUE;		// Generate arduino libraries
		};
		
		KERNEL_TYPE = OSEK{
			CLASS = ECC2;	// Default
		};
		
	};
	
	TASK Task_Sense {
		PRIORITY = 3;
		STACK = SHARED;
		SCHEDULE = FULL;
		AUTOSTART = FALSE;	//TRUE;
        ACTIVATION = 1;		//2;
	};
	
	TASK Task_Compute {
		PRIORITY = 2;
		STACK = SHARED;
		SCHEDULE = FULL;
		AUTOSTART = FALSE;	//TRUE;
        ACTIVATION = 1;		//2;
	};
	
	TASK Task_Actuate {
		PRIORITY = 1;
		STACK = SHARED;
		SCHEDULE = FULL;
		AUTOSTART = FALSE;	//TRUE;
        ACTIVATION = 1;		//2;
	};
	
	ALARM alarm_Sense {
        COUNTER = counter1;
        ACTION = ACTIVATETASK
        {
            TASK = Task_Sense;
        };
        AUTOSTART = TRUE {
            ALARMTIME = 5;	// Release Time
            CYCLETIME = 1;	// Cycle Time
        };
    };
    ALARM alarm_Compute {
        COUNTER = counter1;
        ACTION = ACTIVATETASK
        {
            TASK = Task_Compute;
        };
        AUTOSTART = TRUE {
            ALARMTIME = 5;	// Release Time
            CYCLETIME = 2;	// Cycle Time
        };
    };
    ALARM alarm_Actuate {
        COUNTER = counter1;
        ACTION = ACTIVATETASK
        {
            TASK = Task_Actuate;
        };
        AUTOSTART = TRUE {
            ALARMTIME = 5;	// Release Time
            CYCLETIME = 4;	// Cycle Time
        };
    };
	
	APPDATA myApp {
		APP_SRC = "bsw.cpp";
		APP_SRC = "asw.c";
		APP_SRC = "serial.cpp";
        APP_SRC = "Sense.c";
		APP_SRC = "Compute.c";
		APP_SRC = "Actuate.c";
	};
	
	COUNTER counter1 {	//manual counter
        MINCYCLE = 1;
        MAXALLOWEDVALUE = 127;
        TICKSPERBASE = 1;
    };
   
    ISR TimerISR {
		CATEGORY = 2;
		SOURCE = "TIMER1_COMPA"; /* TODO: Set correct ENTRY name. */
		/* PRIORITY = LOW; */	 /* FIXED HARDWARE PRIORITY */
	};
};
